#: import ew kivy.uix.effectwidget
#: import datetime datetime.datetime
#: import timedelta datetime.timedelta
#: import FadeTransition kivy.uix.screenmanager.FadeTransition
#: import SlideTransition kivy.uix.screenmanager.SlideTransition
#: import JsonStore kivy.storage.jsonstore.JsonStore
#: import Metrics kivy.metrics.Metrics
#: set store JsonStore('data.json')

<Title>: # this will be the title gif for my app (basically the letters)
    source: 'Chamber.gif'
    anim_delay: .05
    size_hint: (.4,.3)
    pos_hint: {'center_x': .5, 'center_y': .8}
    
<OptionButton>: # this button will lead to the options screen where you can pick and choose stuff
    text: "Settings"
    size_hint: (.4,.1)
    pos_hint: {'center_x': .5, 'center_y': .2}

<StartButton>: # this button will lead to the main screen where you will use the app like settings reminds and stuff
    text: "Start"
    size_hint: (.4,.1)
    pos_hint: {'center_x': .5, 'center_y': .4}

<ScreenHandler>:

<StartScreen>: # First screen to load that will lead to other screens like options and menu
    RelativeLayout:
        EffectWidget: # add a background
            effects: [ew.HorizontalBlurEffect(size=30.0),ew.VerticalBlurEffect(size=30.0)]
            MainScreen:
                disabled: True
        OptionButton:
        StartButton:
        Title:

<OptionScreen>: # This screen will contain settings like color, text size, etc.
    MDCard:
        size: self.size
    MDBoxLayout:
        size: self.size
        orientation: 'vertical'
        MDTopAppBar:
            title: ""
            left_action_items: [["keyboard-backspace", lambda x: app.switch_to_last_screen(SlideTransition(direction ='right', duration = .1)),"Back to previous page"]]
            md_bg_color: app.theme_cls.primary_color
        MDBoxLayout: #organize all the settings vertically
            orientation: 'vertical'
            spacing: 20
            padding: 50
            size_hint: 1,1
            MDTopAppBar:
                type_height: 'large'
                title: "Primary Colors"
                md_bg_color: app.theme_cls.primary_color
            MDBoxLayout: #contains all the buttons that will change the primary color and stores them horizontally
                orientation: 'vertical'
                spacing: "10dp"
                MDBoxLayout: #first row of primary colors
                    orientation: 'horizontal'
                    spacing: "10dp"
                    MDRaisedButton:  
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.0, 0.5882352941176471, 0.5333333333333333, 1.0]
                        on_release:
                            app.switch_theme_style("Teal")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.9568627450980393, 0.2627450980392157, 0.21176470588235294, 1.0]
                        on_release: 
                            app.switch_theme_style("Red")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.9137254901960784, 0.11764705882352941, 0.38823529411764707, 1.0]
                        on_release: 
                            app.switch_theme_style("Pink")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.611764705882353, 0.15294117647058825, 0.6901960784313725, 1.0]
                        on_release: 
                            app.switch_theme_style("Purple")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.12941176470588237, 0.5882352941176471, 0.9529411764705882, 1.0]
                        on_release: 
                            app.switch_theme_style("Blue")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.0, 0.7372549019607844, 0.8313725490196079, 1.0]
                        on_release: 
                            app.switch_theme_style("Cyan")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.011764705882352941, 0.6627450980392157, 0.9568627450980393, 1.0]
                        on_release: 
                            app.switch_theme_style("LightBlue")
                MDBoxLayout: #second row of primary colors
                    orientation: 'horizontal'
                    spacing: "10dp"
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        pos_hint_y: .5
                        md_bg_color: [0.2980392156862745, 0.6862745098039216, 0.3137254901960784, 1.0]
                        on_release: 
                            app.switch_theme_style("Green")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [0.5450980392156862, 0.7647058823529411, 0.2901960784313726, 1.0]
                        on_release: 
                            app.switch_theme_style("LightGreen")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [0.803921568627451, 0.8627450980392157, 0.2235294117647059, 1.0]
                        on_release: 
                            app.switch_theme_style("Lime")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [1.0, 0.9215686274509803, 0.23137254901960785, 1.0]
                        on_release: 
                            app.switch_theme_style("Yellow")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [1.0, 0.596078431372549, 0.0, 1.0]
                        on_release: 
                            app.switch_theme_style("Orange")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [0.4745098039215686, 0.3333333333333333, 0.2823529411764706, 1.0]
                        on_release: 
                            app.switch_theme_style("Brown")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [0.24705882352941178, 0.3176470588235294, 0.7098039215686275, 1.0]
                        on_release: 
                            app.switch_theme_style("Indigo")
            MDTopAppBar:
                title: "Secondary Colors"
                md_bg_color: app.theme_cls.primary_color
            MDBoxLayout: #contains all the buttons that will change the secondary/accent color and stores them horizontally
                orientation: 'vertical'
                spacing: "10dp"
                MDBoxLayout: #first row of accent colors
                    orientation: 'horizontal'
                    spacing: "10dp"
                    MDRaisedButton:
                        pos_hint: {'center_x' : 0,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.0, 0.5882352941176471, 0.5333333333333333, 1.0]
                        on_release:
                            app.switch_accent_style("Teal")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.9568627450980393, 0.2627450980392157, 0.21176470588235294, 1.0]
                        on_release: 
                            app.switch_accent_style("Red")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.9137254901960784, 0.11764705882352941, 0.38823529411764707, 1.0]
                        on_release: 
                            app.switch_accent_style("Pink")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.611764705882353, 0.15294117647058825, 0.6901960784313725, 1.0]
                        on_release: 
                            app.switch_accent_style("Purple")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.12941176470588237, 0.5882352941176471, 0.9529411764705882, 1.0]
                        on_release: 
                            app.switch_accent_style("Blue")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.0, 0.7372549019607844, 0.8313725490196079, 1.0]
                        on_release: 
                            app.switch_accent_style("Cyan")
                    MDRaisedButton:
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        width: self.parent.width / 8
                        md_bg_color: [0.011764705882352941, 0.6627450980392157, 0.9568627450980393, 1.0]
                        on_release: 
                            app.switch_accent_style("LightBlue")
                MDBoxLayout: #second row of accent colors
                    orientation: 'horizontal'
                    spacing: "10dp"
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        pos_hint_y: .5
                        md_bg_color: [0.2980392156862745, 0.6862745098039216, 0.3137254901960784, 1.0]
                        on_release: 
                            app.switch_accent_style("Green")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [0.5450980392156862, 0.7647058823529411, 0.2901960784313726, 1.0]
                        on_release: 
                            app.switch_accent_style("LightGreen")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [0.803921568627451, 0.8627450980392157, 0.2235294117647059, 1.0]
                        on_release: 
                            app.switch_accent_style("Lime")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [1.0, 0.9215686274509803, 0.23137254901960785, 1.0]
                        on_release: 
                            app.switch_accent_style("Yellow")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [1.0, 0.596078431372549, 0.0, 1.0]
                        on_release: 
                            app.switch_accent_style("Orange")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [0.4745098039215686, 0.3333333333333333, 0.2823529411764706, 1.0]
                        on_release: 
                            app.switch_accent_style("Brown")
                    MDRaisedButton:
                        width: self.parent.width / 8
                        pos_hint: {'center_x' : .5,'center_y': .5}
                        md_bg_color: [0.24705882352941178, 0.3176470588235294, 0.7098039215686275, 1.0]
                        on_release: 
                            app.switch_accent_style("Indigo")


<DayScreen>:
    EffectWidget: # add a background
        effects: [ew.HorizontalBlurEffect(size=30.0),ew.VerticalBlurEffect(size=30.0)]
        MainScreen:
            disabled: True
    MDBoxLayout:
        canvas.before:
            Color:
                rgba: 1,1,1,1
            Rectangle:
                size: self.size
                pos: self.pos
        orientation: 'vertical'
        size_hint: .9,.8
        pos_hint: {'center_x': .5, 'center_y': .5}
        MDTopAppBar:
            title: ""
            pos_hint: {"top": 1}
            elevation: 0
            left_action_items: [["alpha-x", lambda x: app.switch_to_last_screen(FadeTransition(duration = .1)),"Back to previous page"]]
            md_bg_color: app.theme_cls.primary_color
        
        MDTextFieldRect:
            id: textbox
            hint_text: 'Add notes'
            font_size: 25
            background_color: app.theme_cls.accent_dark[0],app.theme_cls.accent_dark[1],app.theme_cls.accent_dark[2],.3
            mode: "fill"
            on_focus:
                if not self.focus: store.put(str((app.get_current_day() + timedelta(days = app.most_recent_day_button)).timetuple().tm_yday ) + "/" + str(app.get_current_day().year), cur_text = self.text);
<MainScreen>: # This screen will contain most of the apps features like setting reminders and looking at a visual calendar
    MDCard:
        size: self.parent.size
    MDBoxLayout:
        orientation: 'vertical'
        MDBoxLayout:
            orientation: "vertical"
            MDTopAppBar:
                left_action_items: [["menu", lambda x: app.open_menu() ,"open menu"]] # wip
                md_bg_color: app.theme_cls.primary_color
                pos_hint: {'top': 1}
            FloatLayout:
                MDBoxLayout:
                    size: self.size
                    orientation: "horizontal"
                    padding: 20
                    spacing: 20
                    canvas.before:
                        Color:
                            rgba: (.8,.8,.8,.8) if app.theme_cls.theme_style == 'Light' else (.2,.2,.2,.8)
                        RoundedRectangle:
                            pos: 10,10
                            #size:self.size
                            size: self.size[0]/2 + self.size[0]/10,self.size[1]-20
                    Button:
                        id: day1
                        canvas.before:
                            Color:
                                rgba: app.theme_cls.accent_dark[0],app.theme_cls.accent_dark[1],app.theme_cls.accent_dark[2],.7
                            RoundedRectangle:
                                pos: self.pos
                                size: self.size
                            Color:
                                rgba:[0,0,0,1]
                            Line:
                                cap: "none"
                                points: [self.pos[0],self.height/8*7, self.pos[0] + self.width, self.height/8*7]
                                width: 3
                        background_color: [0,0,0,0]
                        text: str(app.get_current_day().day) + " \n" + app.get_current_day().strftime("%A")
                        font_size: 25
                        padding_y: 7
                        text_size: self.size
                        valign: 'top'
                        halign: 'center'
                        on_release:
                            handler = app.root
                            handler.transition = FadeTransition(duration = .2)
                            app.last_screen = handler.current
                            app.most_recent_day_button = 0
                            handler.current = 'day'
                            if store.exists(str(app.get_current_day().timetuple().tm_yday ) + "/" + str(app.get_current_day().year)): handler.current_screen.ids.textbox.text = store.get(str(app.get_current_day().timetuple().tm_yday ) + "/" + str(app.get_current_day().year))["cur_text"]
                            else: handler.current_screen.ids.textbox.text = ""
                    Button:
                        id: day2
                        canvas.before:
                            Color:
                                rgba: app.theme_cls.accent_dark[0],app.theme_cls.accent_dark[1],app.theme_cls.accent_dark[2],.7
                            RoundedRectangle:
                                pos: self.pos
                                size: self.size
                            Color:
                                rgba:[0,0,0,1]
                            Line:
                                cap: "none"
                                points: [self.pos[0],self.height/8*7, self.pos[0] + self.width, self.height/8*7]
                                width: 3
                        background_color: [0,0,0,0]
                        font_size: 25
                        padding_y: 7
                        text: (app.get_current_day() + timedelta(days=1)).strftime("%d") + "\n" + (app.get_current_day() + timedelta(days=1)).strftime("%A")
                        text_size: self.size
                        valign: 'top'
                        halign: 'center'
                        on_release:
                            handler = app.root
                            handler.transition = FadeTransition(duration = .2)
                            app.last_screen = handler.current
                            handler.current = 'day'
                            app.most_recent_day_button = 1
                            if store.exists(str((app.get_current_day() + timedelta(days = 1)).timetuple().tm_yday ) + "/" + str((app.get_current_day() + timedelta(days = 1)).year)): handler.current_screen.ids.textbox.text = store.get(str((app.get_current_day() + timedelta(days = 1)).timetuple().tm_yday ) + "/" + str((app.get_current_day() + timedelta(days = 1)).year))["cur_text"]
                            else: handler.current_screen.ids.textbox.text = ""
                    Button:
                        id: day3
                        canvas.before:
                            Color:
                                rgba: app.theme_cls.accent_dark[0],app.theme_cls.accent_dark[1],app.theme_cls.accent_dark[2],.7
                            RoundedRectangle:
                                pos: self.pos
                                size: self.size
                            Color:
                                rgba:[0,0,0,1]
                            Line:
                                cap: "none"
                                points: [self.pos[0],self.height/8*7, self.pos[0] + self.width, self.height/8*7]
                                width: 3
                        background_color: [0,0,0,0]
                        text: (app.get_current_day() + timedelta(days=2)).strftime("%d") + "\n" + (app.get_current_day() + timedelta(days=2)).strftime("%A")
                        font_size: 25
                        padding_y: 7
                        text_size: self.size
                        valign: 'top'
                        halign: 'center'
                        on_release:
                            handler = app.root
                            app.most_recent_day_button = 2
                            handler.transition = FadeTransition(duration = .2)
                            app.last_screen = handler.current
                            handler.current = 'day'
                            if store.exists(str((app.get_current_day() + timedelta(days = 2)).timetuple().tm_yday ) + "/" + str((app.get_current_day() + timedelta(days = 2)).year)): handler.current_screen.ids.textbox.text = store.get(str((app.get_current_day() + timedelta(days = 2)).timetuple().tm_yday ) + "/" + str((app.get_current_day() + timedelta(days = 2)).year))["cur_text"]
                            else: handler.current_screen.ids.textbox.text = ""
                    MDBoxLayout:
                        size_hint_x: 2
                        orientation: "vertical"
                        spacing: 20
                        ScrollView:
                            MDTextFieldRect:
                                id: notes
                                size_hint: 1,None
                                hint_text: 'Add notes'
                                font_size: 25
                                foreground_color: (0,0,0,1) if app.theme_cls.theme_style == 'Light' else (1,1,1,1)
                                height: max( (len(self._lines)+1) * self.line_height, self.parent.height)
                                background_color: app.theme_cls.accent_dark[0],app.theme_cls.accent_dark[1],app.theme_cls.accent_dark[2],.3
                                mode: "fill"
                                on_focus:
                                    if not self.focus: store.put("notes", cur_text = self.text)
                        Image:
                            source: 'subway.gif'
                            anim_delay: 0.05

                MDIconButton:
                    icon: "arrow-right"
                    pos_hint: {'center_x': .603, 'center_y':.47}
                    on_release:
                        app.current_day = app.get_current_day() + timedelta(days=1);app.reload_buttons(app.get_current_day())
                MDIconButton:
                    icon: "arrow-left"
                    pos_hint: {'center_x': .02, 'center_y':.47}
                    on_release:
                        app.current_day = app.get_current_day() - timedelta(days=1);app.reload_buttons(app.get_current_day())
        MDBoxLayout:

            width: self.parent.parent.width
            orientation: 'horizontal'
            MDIconButton:
                icon: 'cog'
            MDIconButton:
                icon: 'account-circle'
            MDIconButton:
                icon: 'close-box'
